// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorFullCalendar
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\_Imports.razor"
using Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\_Imports.razor"
using Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    public partial class FullCalendar : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 12 "F:\Users\camsl\Source\Repos\Projet Entre2Ages\BlazorEntre2Ages\BlazorFullCalendar\FullCalendar.razor"
       
    ElementReference elem;

    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> ExtraAttributes { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string Id { get; set; } = "calendar";
    [Parameter] public CalendarSettings settings { get; set; }
    [Parameter] public EventCallback<CalendarEventChangeResponse> OnAddEvent { get; set; }
    [Parameter] public EventCallback<CalendarEventChangeResponse> OnUpdateEvent { get; set; }
    [Parameter] public EventCallback<CalendarEventChangeResponse> OnClickEvent { get; set; }

    private CalendarInteropService interop;
    private DotNetObjectReference<FullCalendar> _objRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            interop = new CalendarInteropService(jsRuntime);
            _objRef = DotNetObjectReference.Create(this);
            await interop.SetDotNetReference(_objRef);
            await InitCalendar();
        }
    }

    public async Task InitCalendar()
    {
        await interop.CalendarInit("calendar", settings);
        await InvokeAsync(() => { StateHasChanged(); });
    }

    public async Task ChangeResourceFeed(CalendarResourceFeed calendarResourceFeed)
    {
        //var interop = new Services.InteropService(jsRuntime);
        await interop.CalendarChangeResourceFeed(calendarResourceFeed);
        await InvokeAsync(() => { StateHasChanged(); });
    }

    public async Task CalendarRefetchEvents()
    {
        await interop.CalendarRefetchEvents();
        await InvokeAsync(() => { StateHasChanged(); });
    }

    public async Task ChangeSlotWidth(int value)
    {
        await interop.CalendarSetOption("slotWidth", value);
        await InvokeAsync(() => { StateHasChanged(); });
    }

    [JSInvokable("AddEventCallback")]
    public async Task AddEventCallback(string returnValue)
    {
        try
        {
            var response = JsonConvert.DeserializeObject<CalendarEventChangeResponse>(returnValue);
            await OnAddEvent.InvokeAsync(response);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    [JSInvokable("UpdateEventCallback")]
    public async Task UpdateEventCallback(string returnValue)
    {
        try
        {
            var response = JsonConvert.DeserializeObject<CalendarEventChangeResponse>(returnValue);
            await OnUpdateEvent.InvokeAsync(response);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    [JSInvokable("ClickEventCallback")]
    public async Task ClickEventCallback(string returnValue)
    {
        try
        {
            var response = JsonConvert.DeserializeObject<CalendarEventChangeResponse>(returnValue);
            await OnClickEvent.InvokeAsync(response);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public void Dispose()
    {
        _objRef?.Dispose();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591
